{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Board.js","webpack:///./ComputerPlayer.js","webpack:///./Dictionary.js","webpack:///./Game.js","webpack:///./HumanPlayer.js","webpack:///./View.js","webpack:///./index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,G;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AChCA,OAAO,WAAW,GAAG,mBAAO,CAAC,wCAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,Y;;;;;;;;;;;;AC1FlB;AAAA;AACA;AACA,cAAc,mBAAO,CAAC,8BAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,O;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA,K;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACe,mEAAI,EAAC;;;AAGpB;AACA;AACA,e;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;;ACjBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACe,mE;;;;;;;;;;;;AC1Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACc;AACM;AAChD;AAC2B;AAC3B;AACA;AACA;AACA;;AAEA,gBAAgB,gDAAI;AACpB,OAAO,sDAAW;AAClB,OAAO,yDAAc;AACrB;AACA;AACA;AACA,MAAM,gDAAI;;AAEV,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","// Board\n//   This would construct a board to the length. \n//   It should check if the board is complete. \n//   It should be able to add characters at different indices.\n\n\nclass Board {\n  constructor(length) {\n    this.board = new Array(length).fill(\"_\");\n  }\n\n  isComplete(word) {\n      if (word === this.board.join(\"\")) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  \n  addLetter(word, letter) {\n    for (let i = 0; i < word.length; i++) {\n      if (letter === word[i]) {\n        this.board[i] = letter;\n      }\n    }\n  }  \n\n  display() {\n    console.log(this.board.join(\" \"))\n  }\n}\n\nmodule.exports = Board;\n\n\n  \n\n\n","const {dictionary} = require(\"./Dictionary.js\")\n// let dictionary = ['apple','watermelon']\n  class ComputerPlayer {\n    constructor (name = computer) {\n      // this.computer = computer;\n      this.name = name;\n      this.secretWord = dictionary[(Math.floor(Math.random()* dictionary.length))];\n  }\n\n  secretWordLength() { return this.secretWord.length}\n\n  reveal() {\n     return this.secretWord\n  }\n\n\n}\n\nmodule.exports = ComputerPlayer;\n\nlet comp = new ComputerPlayer('robo')\nconsole.log(comp.secretWord)\n\n\n// let Con = new ComputerPlayer(\"Alex\")\n// console.log(Con.secretWord)\n// console.log(Con.reveal())\n\n\n","// let humanBody = ['blood', 'body', 'cell', 'digestion', 'disease', 'drug', 'excrete', 'exercise', 'face', 'foot', 'hair', 'head', 'health', 'hygiene', 'injury', 'muscle', 'nerve', 'organ', 'reproduction', 'respiration', 'sense', 'skeleton', 'tooth'];\n// let humanMind = ['action', 'anger', 'behavior', 'belief', 'care', 'emotion', 'fear', 'happiness', 'hate', 'knowledge', 'learn', 'love', 'mind', 'morals', 'personality', 'sadness', 'thought' ];\n// let everydayLife = ['airplane', 'boat', 'building', 'car', 'city', 'clothing', 'community', 'cooking', 'drink', 'family', 'food', 'furniture', 'game', 'home', 'jewelry', 'leisure', 'relationship', 'room', 'school', 'sport', 'tool', 'transportation'];\n// let historyAndCulture = ['celebration', 'culture', 'education', 'history', 'myth', 'religion', 'science', 'tradition'];\n// let communication = ['art', 'book', 'color', 'communication', 'dance', 'film', 'grammar', 'instrument', 'language', 'literature', 'music', 'photography', 'theater'];\n\n\n// console.log(humanBody)\n\n// let humanBodyDefinition = `Words for parts of our bodies, how our bodies work, and how we care for our bodies`;\n// let humanMindDefinition = `Words for how we feel, how we think, and how we act`;\n// let everydayLifeDefinition = `Words for where we live, how we travel, what we eat and wear, who we know, and how we have fun`;\n// let historyAndCultureDefinition = `Words for what organizes society, what has happened in the past, and what shapes the future`;\n// let communicationDefinition = `Words for how we communicate with language and how we communicate through art`;\n\nlet dictionary = \n[\"able\", \"about\", \"account\", \"acid\", \"across\",\n    \"addition\", \"adjustment\", \"advertisement\", \"after\", \"again\", \"against\",\n    \"agreement\", \"almost\", \"among\", \"amount\", \"amusement\", \"angle\", \"angry\",\n    \"animal\", \"answer\", \"apparatus\", \"apple\", \"approval\", \"arch\", \"argument\",\n    \"army\", \"attack\", \"attempt\", \"attention\", \"attraction\", \"authority\",\n    \"automatic\", \"awake\", \"baby\", \"back\", \"balance\", \"ball\", \"band\", \"base\",\n    \"basin\", \"basket\", \"bath\", \"beautiful\", \"because\", \"before\", \"behaviour\",\n    \"belief\", \"bell\", \"bent\", \"berry\", \"between\", \"bird\", \"birth\", \"bite\",\n    \"bitter\", \"black\", \"blade\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \n    \"body\", \"boiling\", \"bone\", \"book\", \"boot\", \"bottle\", \"brain\", \"brake\",\n    \"branch\", \"brass\", \"bread\", \"breath\", \"brick\", \"bridge\", \"bright\", \"broken\",\n    \"brother\", \"brown\", \"brush\", \"bucket\", \"building\", \"bulb\", \"burn\", \"burst\",\n    \"business\", \"butter\", \"button\", \"cake\", \"camera\", \"canvas\", \"card\", \"care\", \n    \"carriage\", \"cart\", \"cause\", \"certain\", \"chain\", \"chalk\", \"chance\", \"change\", \n    \"cheap\", \"cheese\", \"chemical\", \"chest\", \"chief\", \"chin\", \"church\", \"circle\", \"clean\", \n    \"clear\", \"clock\", \"cloth\", \"cloud\", \"coal\", \"coat\", \"cold\", \"collar\", \"colour\", \"comb\",\n    \"come\", \"comfort\", \"committee\", \"common\", \"company\", \"comparison\", \"competition\", \"complete\", \n    \"complex\", \"condition\", \"connection\", \"conscious\", \"control\", \"cook\", \"copper\", \"copy\", \"cord\", \n    \"cork\", \"cotton\", \"cough\", \"country\", \"cover\", \"crack\", \"credit\", \"crime\", \"cruel\", \"crush\", \"current\",\n    \"curtain\", \"curve\", \"cushion\", \"damage\", \"danger\", \"dark\", \"daughter\", \"dead\", \"dear\", \"death\", \"debt\",\n    \"decision\", \"deep\", \"degree\", \"delicate\", \"dependent\", \"design\", \"desire\", \"destruction\", \"detail\", \n    \"development\", \"different\", \"digestion\", \"direction\", \"dirty\", \"discovery\", \"discussion\", \"disease\", \n    \"disgust\", \"distance\", \"distribution\", \"division\", \"door\", \"doubt\", \"down\", \"drain\", \"drawer\", \"dress\", \n    \"drink\", \"driving\", \"drop\", \"dust\", \"early\", \"earth\", \"east\", \"edge\", \"education\", \"effect\", \"elastic\", \n    \"electric\", \"engine\", \"enough\", \"equal\", \"error\", \"even\", \"event\", \"ever\", \"every\", \"example\", \"exchange\", \n    \"existence\", \"expansion\", \"experience\", \"expert\", \"face\", \"fact\", \"fall\", \"false\", \"family\", \"farm\", \"father\", \n    \"fear\", \"feather\", \"feeble\", \"feeling\", \"female\", \"fertile\", \"fiction\", \"field\", \"fight\", \"finger\", \"fire\", \n    \"first\", \"fish\", \"fixed\", \"flag\", \"flame\", \"flat\", \"flight\", \"floor\", \"flower\", \"fold\", \"food\", \"foolish\",\n    \"foot\", \"force\", \"fork\", \"form\", \"forward\", \"fowl\", \"frame\", \"free\", \"frequent\", \"friend\", \"from\", \"front\", \n    \"fruit\", \"full\", \"future\", \"garden\", \"general\", \"girl\", \"give\", \"glass\", \"glove\", \"goat\", \"gold\", \"good\", \n    \"government\", \"grain\", \"grass\", \"great\", \"green\", \"grey\", \"grip\", \"group\", \"growth\", \"guide\", \"hair\", \n    \"hammer\", \"hand\", \"hanging\", \"happy\", \"harbour\", \"hard\", \"harmony\", \"hate\", \"have\", \"head\", \"healthy\", \n    \"hear\", \"hearing\", \"heart\", \"heat\", \"help\", \"high\", \"history\", \"hole\", \"hollow\", \"hook\", \"hope\", \"horn\", \n    \"horse\", \"hospital\", \"hour\", \"house\", \"humour\", \"idea\", \"important\", \"impulse\", \"increase\", \"industry\", \n    \"insect\", \"instrument\", \"insurance\", \"interest\", \"invention\", \"iron\", \"island\", \"jelly\", \"jewel\", \"join\", \n    \"journey\", \"judge\", \"jump\", \"keep\", \"kettle\", \"kick\", \"kind\", \"kiss\", \"knee\", \"knife\", \"knot\", \"knowledge\", \n    \"land\", \"language\", \"last\", \"late\", \"laugh\", \"lead\", \"leaf\", \"learning\", \"leather\", \"left\", \"letter\", \"level\", \n    \"library\", \"lift\", \"light\", \"like\", \"limit\", \"line\", \"linen\", \"liquid\", \"list\", \"little\", \"living\", \"lock\", \n    \"long\", \"look\", \"loose\", \"loss\", \"loud\", \"love\", \"machine\", \"make\", \"male\", \"manager\", \"mark\", \"market\", \n    \"married\", \"mass\", \"match\", \"material\", \"meal\", \"measure\", \"meat\", \"medical\", \"meeting\", \"memory\", \"metal\", \n    \"middle\", \"military\", \"milk\", \"mind\", \"mine\", \"minute\", \"mist\", \"mixed\", \"money\", \"monkey\", \"month\", \"moon\", \n    \"morning\", \"mother\", \"motion\", \"mountain\", \"mouth\", \"move\", \"much\", \"muscle\", \"music\", \"nail\", \"name\", \n    \"narrow\", \"nation\", \"natural\", \"near\", \"necessary\", \"neck\", \"need\", \"needle\", \"nerve\", \"news\", \"night\", \n    \"noise\", \"normal\", \"north\", \"nose\", \"note\", \"number\", \"observation\", \"offer\", \"office\", \"only\", \"open\", \n    \"operation\", \"opinion\", \"opposite\", \"orange\", \"order\", \"organization\", \"ornament\", \"other\", \"oven\", \"over\", \n    \"owner\", \"page\", \"pain\", \"paint\", \"paper\", \"parallel\", \"parcel\", \"part\", \"past\", \"paste\", \"payment\", \"peace\", \n    \"pencil\", \"person\", \"physical\", \"picture\", \"pipe\", \"place\", \"plane\", \"plant\", \"plate\", \"play\", \"please\", \n    \"pleasure\", \"plough\", \"pocket\", \"point\", \"poison\", \"polish\", \"political\", \"poor\", \"porter\", \"position\", \n    \"possible\", \"potato\", \"powder\", \"power\", \"present\", \"price\", \"print\", \"prison\", \"private\", \"probable\", \n    \"process\", \"produce\", \"profit\", \"property\", \"prose\", \"protest\", \"public\", \"pull\", \"pump\", \"punishment\", \n    \"purpose\", \"push\", \"quality\", \"question\", \"quick\", \"quiet\", \"quite\", \"rail\", \"rain\", \"range\", \"rate\", \n    \"reaction\", \"reading\", \"ready\", \"reason\", \"receipt\", \"record\", \"regret\", \"regular\", \"relation\", \"religion\", \n    \"representative\", \"request\", \"respect\", \"responsible\", \"rest\", \"reward\", \"rhythm\", \"rice\", \"right\", \"ring\", \n    \"river\", \"road\", \"roll\", \"roof\", \"room\", \"root\", \"rough\", \"round\", \"rule\", \"safe\", \"sail\", \"salt\", \"same\", \"sand\", \n    \"scale\", \"school\", \"science\", \"scissors\", \"screw\", \"seat\", \"second\", \"secret\", \"secretary\", \"seed\", \"seem\", \n    \"selection\", \"self\", \"send\", \"sense\", \"separate\", \"serious\", \"servant\", \"shade\", \"shake\", \"shame\", \"sharp\", \n    \"sheep\", \"shelf\", \"ship\", \"shirt\", \"shock\", \"shoe\", \"short\", \"shut\", \"side\", \"sign\", \"silk\", \"silver\", \n    \"simple\", \"sister\", \"size\", \"skin\", \"skirt\", \"sleep\", \"slip\", \"slope\", \"slow\", \"small\", \"smash\", \"smell\", \n    \"smile\", \"smoke\", \"smooth\", \"snake\", \"sneeze\", \"snow\", \"soap\", \"society\", \"sock\", \"soft\", \"solid\", \"some\", \n    \"song\", \"sort\", \"sound\", \"soup\", \"south\", \"space\", \"spade\", \"special\", \"sponge\", \"spoon\", \"spring\", \"square\", \n    \"stage\", \"stamp\", \"star\", \"start\", \"statement\", \"station\", \"steam\", \"steel\", \"stem\", \"step\", \"stick\", \"sticky\", \n    \"stiff\", \"still\", \"stitch\", \"stocking\", \"stomach\", \"stone\", \"stop\", \"store\", \"story\", \"straight\", \"strange\", \n    \"street\", \"stretch\", \"strong\", \"structure\", \"substance\", \"such\", \"sudden\", \"sugar\", \"suggestion\", \"summer\", \n    \"support\", \"surprise\", \"sweet\", \"swim\", \"system\", \"table\", \"tail\", \"take\", \"talk\", \"tall\", \"taste\", \"teaching\", \n    \"tendency\", \"test\", \"than\", \"that\", \"then\", \"theory\", \"there\", \"thick\", \"thin\", \"thing\", \"this\", \"thought\", \n    \"thread\", \"throat\", \"through\", \"through\", \"thumb\", \"thunder\", \"ticket\", \"tight\", \"till\", \"time\", \"tired\", \n    \"together\", \"tomorrow\", \"tongue\", \"tooth\", \"touch\", \"town\", \"trade\", \"train\", \"transport\", \"tray\", \"tree\", \n    \"trick\", \"trouble\", \"trousers\", \"true\", \"turn\", \"twist\", \"umbrella\", \"under\", \"unit\", \"value\", \"verse\", \"very\", \n    \"vessel\", \"view\", \"violent\", \"voice\", \"waiting\", \"walk\", \"wall\", \"warm\", \"wash\", \"waste\", \"watch\", \"water\", \n    \"wave\", \"weather\", \"week\", \"weight\", \"well\", \"west\", \"wheel\", \"when\", \"where\", \"while\", \"whip\", \"whistle\", \n    \"white\", \"wide\", \"will\", \"wind\", \"window\", \"wine\", \"wing\", \"winter\", \"wire\", \"wise\", \"with\", \"woman\", \"wood\", \n    \"wool\", \"word\", \"work\", \"worm\", \"wound\", \"writing\", \"wrong\", \"year\", \"yellow\", \"yesterday\", \"young\"\n]\n\nmodule.exports = {dictionary};","// const HumanPlayer = require(\"./HumanPlayer.js\")\n// const ComputerPlayer = require(\"./ComputerPlayer\")\nconst Board = require(\"./Board.js\")\nclass Game {\n  constructor(player1, player2) {\n    this.player1 = player1;\n    this.player2 = player2;\n    //this.computer = computer;\n    this.currentPlayer = player1;\n    this.board = new Board();\n    // (this.computer.secretWordLength());\n    this.guessesRemaining = 9;\n    this.guessedLetters = [];\n  }\n  switchPlayers(){\n    \n    this.currentPlayer === this.player1? this.player2: this.player1\n  }  \n  isGameOver() {\n    if(this.board.isComplete(this.computer.secretWord) || this.guessesRemaining === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n   \n  guessValidity(letter) {\n    let alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o','p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    if (!this.guessedLetters.includes(letter) &&  alphabets.includes(letter)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  play() {\n    while(!this.isGameOver()) {\n    console.clear();\n    console.log('Welcome ' + this.player1.name )\n\n      this.board.display();\n      console.log(\"you have \" + this.guessesRemaining  + \" guesses remaining\")\n      console.log(\"Guessed letter: \" + this.guessedLetters)\n      let letter = this.player1.getMove();\n\n      if(this.guessedLetters.includes(letter)) {\n        letter = readline.question(\"You already picked this letter. Please enter a different letter: \")\n      } \n      if (this.guessValidity(letter)) {\n        this.guessedLetters.push(letter);\n        this.board.addLetter(this.computer.secretWord, letter);\n        this.guessesRemaining --;\n      } else {\n         letter = console.log(\"Please enter a valid letter: \")\n      }\n\n\n      console.clear();\n    } \n\n    if(this.board.isComplete(this.computer.secretWord)) {\n      console.log(\" YOU WON! \")\n      console.log(\"The word is: \" + this.computer.reveal());\n    } else {\n      console.log(\" YOU lOOSE ! \")\n      console.log(\"The word is: \" + this.computer.reveal());\n    }\n  }\n}\nexport default Game;\n\n\n// let playerName = console.log('Please enter name ');\n// let game = new Game(new HumanPlayer(playerName))\n// game.play(); \n","// HumanPlayer \n// * Will need to getMove from player. \n// * Display the board. \n// * Possibly a select secret word that returns the length. \n// * Possibly a give Positions that returns an array of indices. \n// * Possibly a reveal word.  \n\nclass HumanPlayer {\n    constructor(name) {\n        this.name = name; \n    }\n    getMove() {\n        let userGuess = readline.question(\"Please Enter A Letter: \");\n        return userGuess.toLowerCase();\n    }\n}\n\nmodule.exports = HumanPlayer;","class View {\n  constructor( game, el) {\n    this.game = game;\n    this.el = el;\n    debugger\n    // this.setUp()\n    // this.play = playAgain()\n  }\n  // setUp(){\n\n  // }\n  playAgain(){\n    let button = document.querySelector('#playAgain');\n    button.addEventListener('click' ,()=> {\n      this.game.playAgain();\n      this.play();\n    })\n  }\n  // play() {\n  //   let\n  // }\n  // let gameDiv = document.createElement('div');\n  // gameDiv.id = \"boardDiv\";\n  // this.el\n\n}\nexport default View","import Game from\"./Game.js\";\nimport HumanPLayer from\"./HumanPlayer.js\";\nimport ComputerPlayer from\"./ComputerPlayer.js\";\n// import Dictionary from\"./Dictionary.js\";\nimport View from\"./View.js\"\ndocument.addEventListener('DOMContentLoaded', () => {\nlet playerOne;\nlet playerTwo;\n  // let input = document.querySelector('#input').value\n\n let game = new Game(\n   new HumanPLayer(\"Faris\"),\n   new ComputerPlayer(\"Robot\")\n );\n//  game.play()\n  let el = document.querySelector(\"#hm\")\n  new View(game, el)\n \n})"],"sourceRoot":""}